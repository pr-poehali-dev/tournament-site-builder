import { useCallback } from "react";
import type { AppState, User } from "@/types";

interface LoginForm {
  username: string;
  password: string;
}

export const useLoginHandlers = (
  loginForm: LoginForm,
  setLoginForm: React.Dispatch<React.SetStateAction<LoginForm>>,
  appState: AppState,
  hideLoginForm: () => void,
) => {
  const handleLoginUsernameChange = useCallback(
    (e: React.ChangeEvent<HTMLInputElement>) => {
      setLoginForm((prev) => ({ ...prev, username: e.target.value }));
    },
    [],
  );

  const handleLoginPasswordChange = useCallback(
    (e: React.ChangeEvent<HTMLInputElement>) => {
      setLoginForm((prev) => ({ ...prev, password: e.target.value }));
    },
    [],
  );

  const login = useCallback(async () => {
    console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:', loginForm.username);
    
    try {
      console.log('üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
      const response = await fetch('https://functions.poehali.dev/c8519cb6-9df9-4faf-a146-2fedd66d1623', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          username: loginForm.username,
          password: loginForm.password
        })
      });

      console.log('üì° –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
      const data = await response.json();
      console.log('üì° –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);

      if (response.ok && data.success) {
        if (data.token) {
          localStorage.setItem('auth_token', data.token);
        }
        
        const authenticatedUser = {
          id: data.user.id.toString(),
          username: data.user.username,
          name: data.user.name,
          role: data.user.role,
          city: data.user.city || '',
          isActive: data.user.isActive,
          password: '***'
        };
        appState.currentUser = authenticatedUser;
        hideLoginForm();
        setLoginForm({ username: "", password: "" });
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', data.error);
        alert(data.error || "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω");
      }
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
      alert(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  }, [loginForm, hideLoginForm]);

  return {
    handleLoginUsernameChange,
    handleLoginPasswordChange,
    login,
  };
};